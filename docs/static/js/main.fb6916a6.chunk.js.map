{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRouter.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","active","useSelector","state","useDispatch","className","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRouter","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb6916a6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCj4DAJuptXNaIgQmQBxvYsSSrWo_mz2Mw\",\r\n    authDomain: \"react-app-cursos-db9ff.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-db9ff\",\r\n    storageBucket: \"react-app-cursos-db9ff.appspot.com\",\r\n    messagingSenderId: \"657813584416\",\r\n    appId: \"1:657813584416:web:bd07eba84a7a6f082bda45\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\nexport { db, googleAuthProvider, firebase}","\r\n\r\n\r\nexport const fileUpload = async ( file ) =>{\r\n    //utilizamos el url que usamos en postman\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dmetx6xye/upload'\r\n    //creamos el form-data\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n    //esto es probable que falle asi que tryCatch\r\n    try {//fetch por defecto es GET pero utilizamos el \r\n        //seg arg \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n    //return url imagen\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) =>{\r\n    const notesSnap = await db.collection(`/${uid}/journal/notes/`).get();\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    //asi ya tendremos el listado en []\r\n    // console.log(notes);\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError:'[UI] set error',\r\n    uiRemoveError:'[UI] remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    noteActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from '../types/types';\r\n\r\n\r\n//react-journal\r\n//asincrona\r\nexport const startNewNote = () =>{\r\n   \r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        }\r\n       \r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote))\r\n    }\r\n}\r\n\r\n\r\nexport const activeNote = (id, note) =>({\r\n    type: types.noteActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    }\r\n});\r\n\r\n\r\nexport const addNewNote = (id, note) =>({\r\n    type: types.notesAddNew,\r\n    payload:  {\r\n        id, ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = (uid) =>{\r\n    return async(dispatch) =>{\r\n        const notes =  await loadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = (notes) =>({\r\n    type: types.notesLoad,\r\n    payload:  notes,\r\n});\r\n\r\n//async\r\nexport const startSaveNote = (note) =>{\r\n    return async(dispatch, getState)=>{\r\n        const {uid}=getState().auth;\r\n        if (!note.url) {delete note.url;}\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;//eliminamos el id en la nota\r\n        //utilizamos el path, nota incluida\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n        dispatch(refreshNote(note.id, noteToFirestore))//valdira note tmbn\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) =>({\r\n    type: types.notesUpdated,\r\n    payload: { \r\n        id,\r\n        note: {\r\n            id, ...note\r\n        } \r\n    }\r\n});\r\n\r\n\r\n\r\nexport const startUploading = (file) =>{\r\n    return async (dispatch, getState) => {\r\n        const {active: activeNote} = getState().notes;\r\n        \r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () =>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async (dispatch, getState)=>{\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        //lo borramos del store\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n    type:types.notesDelete,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const noteLogout = () =>({\r\n    type: types.notesLogoutCleaning,\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState  = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSave = () =>{\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureClick = () =>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) =>{\r\n        const file = e.target.files[0];\r\n        //controlamos el cancel\r\n        if (file) {\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>30 Marzo 2021</span>\r\n\r\n            <input type=\"file\" style={{display: 'none'}} \r\n                onChange={handleFileChange} id='fileSelector'\r\n                name=\"file\"\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePictureClick} >Picture</button>\r\n                <button className=\"btn\" onClick={handleSave}>save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active:note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] =useForm(note);\r\n    const {body, title, id}=formValues;\r\n    const dispatch = useDispatch();\r\n\r\n    //almacena una var mutable q no varia todo el comp si cambia\r\n    const activeId =useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current=note.id;\r\n        }\r\n    }, [note, reset])\r\n\r\n\r\n    useEffect(() => {//la accion remplaza el id\r\n      dispatch(activeNote(formValues.id, {...formValues}));\r\n    }, [formValues, dispatch]);\r\n\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(startDeleting(id));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\" \r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    name='title'\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                    name='body'\r\n                ></textarea>\r\n\r\n                {   (note.url) &&\r\n                    (<div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n\r\n\r\n            <button onClick={handleDelete} className=\"btn btn-danger\">\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p> Select something \r\n                <br /> \r\n                Or create entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const  setError = ( err ) =>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const  removeError = (  ) =>({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () =>({\r\n    type:types.uiStartLoading\r\n})\r\nexport const finishLoading = () =>({\r\n    type:types.uiFinishLoading\r\n})","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) =>{\r\n    return (dispatch)=>{\r\n\r\n        dispatch(startLoading())\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n        \r\n    }\r\n}\r\n//es asincrona por eso el callback\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user}) => {\r\n                await user.updateProfile({displayName:name})\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n               \r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const login = (uid, displayName) =>{\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\n//asincrono\r\nexport const startLogout = () =>{\r\n    return async (dispatch) => {\r\n       await firebase.auth().signOut();\r\n       dispatch(logout());\r\n       dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type:types.logout\r\n})\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, title, date,body, url }) => {\r\n  \r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () =>{\r\n        dispatch(activeNote(id, {title, date,body, url}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {   url && //condicion para saber si hay imagen\r\n                <div className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',//aqui sin guiones\r\n                    backgroundImage: `url(${url})`,//https://cdna.artstation.com/p/assets/images/images/006/458/524/large/joni-fernandez-03.jpg?1498739545\r\n                }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{title}</p>\r\n                <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    \r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note =>(\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span> \r\n                </h3>\r\n\r\n                <button onClick={handleLogout}  className=\"btn\">Logout</button>\r\n            </div>\r\n\r\n            <div onClick={handleAddNew} className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    ( active )\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }   \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {  startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui)  \r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        email:'',\r\n        password: ''\r\n    });\r\n    //los desestructuramos\r\n    const { email, password }=formValues\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n       dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\"\r\n                autoComplete=\"off\" value={email} onChange={handleInputChange}/>\r\n                <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"auth__input\" value={password} onChange={handleInputChange}/>    \r\n                \r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading} > Login </button>\r\n         \r\n               <div className=\"auth__social-networks\">\r\n                   <p>Login with social networks</p>\r\n                  \r\n                    <div className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n               </div>\r\n\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n  ","\r\n\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    const {msgError} = useSelector(state => state.ui);\r\n    \r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n   \r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n           dispatch( startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () =>{\r\n\r\n        if ( name.trim().length  === 0 ) {\r\n            dispatch(setError('Name is required'))\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if( password !== password2 || password < 5 ){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false; \r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                    {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"auth__input\"\r\n                autoComplete=\"off\" value={name} onChange={handleInputChange}/>\r\n                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\"\r\n                autoComplete=\"off\" value={email} onChange={handleInputChange}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\" value={password} onChange={handleInputChange}/>    \r\n                <input type=\"password\" placeholder=\"Confirm password\" name=\"password2\" className=\"auth__input\" value={password2} onChange={handleInputChange}/>    \r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\" > Register </button>\r\n                <Link className=\"link\" to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport {\r\n    \r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        \r\n            <div className=\"auth__main\">\r\n              <div className=\"auth__box-container\">\r\n                <Switch>\r\n                  <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                  <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                  <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n         \r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    // console.log(rest.location.pathname);\r\n   \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n        \r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n        \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user)=>{\r\n\r\n            if ( user?.uid ) {\r\n               dispatch(login(user.uid, user.displayName));\r\n               setIsLoggedIn(true);\r\n\r\n               \r\n               dispatch( startLoadingNotes(user.uid) );\r\n            } else { \r\n               setIsLoggedIn(false) \r\n            }\r\n           setChecking(false);\r\n        }) \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n   \r\n    return (\r\n        \r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        {/* Main Route */}\r\n                        <PublicRoute isAuthenticated={isLoggedIn} path=\"/auth\" component={AuthRouter}/>\r\n                        <PrivateRouter isAuthenticated={isLoggedIn} exact path=\"/\" component={JournalScreen}/>\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        \r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading:false,   \r\n    msgError: null, \r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active:{\r\n            id:'24357948357924',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12347218\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.noteActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ?  action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state, \r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes:[],\r\n            }\r\n      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = \r\n        (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) \r\n        || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n        reducers,\r\n        composeEnhancers(\r\n            applyMiddleware(thunk)\r\n        )\r\n);","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {//estructura del objeto\r\n        uid: sfjalksdjf0324908,\r\n        name: 'Joni'\r\n    }\r\n  \r\n*/\r\n\r\n\r\n\r\nexport const authReducer = (state={}, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n    \r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\nimport React from 'react'\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n \n  <JournalApp />,\n  document.getElementById('root')\n);\n\n//estaba instalando sass"],"sourceRoot":""}